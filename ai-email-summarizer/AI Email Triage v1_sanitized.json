{
  "name": "AI Email Triage v1",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        80,
        16
      ],
      "id": "7594b48b-b193-4d3d-9b52-5dcdace68f7a",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "REDACTED_GMAIL_OAUTH_ID",
          "name": "REDACTED_GMAIL_ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the email data from the previous node\nconst item = $input.first().json;\n\n// Extract email details with fallbacks\nconst emailSubject = item.subject || item.Subject || 'No Subject';\nconst emailBody = item.body || item.snippet || item.payload?.body?.data || 'No content';\nconst emailFrom = item.from || item.From || 'Unknown sender';\n\n// Return clean, structured data\nreturn {\n  subject: emailSubject,\n  body: emailBody,\n  sender: emailFrom,\n  timestamp: new Date().toISOString(),\n  originalData: item // Keep original for debugging\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        0
      ],
      "id": "12f7a54b-cf55-4f83-b9e9-ecedbe948b44",
      "name": "Extract Email Data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "REDACTED_API_KEY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [{\n    \"parts\": [{\n      \"text\": \"You are an AI assistant that summarizes support emails concisely for a support team.\\n\\nEmail Subject: {{ $json.subject }}\\n\\nEmail From: {{ $json.sender }}\\n\\nEmail Content: {{ $json.body }}\\n\\nProvide a brief summary (2-3 sentences) highlighting:\\n1. The main issue or request\\n2. Any urgency indicators\\n3. Suggested priority level (High/Medium/Low)\\n\\nFormat your response clearly.\"\n    }]\n  }],\n  \"generationConfig\": {\n    \"temperature\": 0.4,\n    \"maxOutputTokens\": 400\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        32
      ],
      "id": "3c450938-7688-4eae-9fb3-2b57b5fcf838",
      "name": "Ai model"
    },
    {
      "parameters": {
        "jsCode": "// Get the response from Gemini\nconst geminiResponse = $input.first().json;\n\n// Extract the AI-generated text\nconst aiSummary = geminiResponse.candidates[0].content.parts[0].text;\n\n// Get the original email data (passed through)\nconst emailData = $('Extract Email Data').first().json; // Reference the first Code node\n\n// Return formatted data for Slack\nreturn {\n  summary: aiSummary,\n  subject: emailData.subject,\n  sender: emailData.sender,\n  timestamp: emailData.timestamp\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        896,
        176
      ],
      "id": "815143c6-87cd-4865-b417-efa0bc2f51de",
      "name": "Ai response"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "REDACTED_SLACK_WEBHOOK_URL",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=\ud83c\udfab New Support Email\n\nFrom: {{ $json.sender }}\nSubject: {{ $json.subject }}\nReceived: {{ $json.timestamp }}\n\nAI Summary:\n{{ $json.summary }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        192
      ],
      "id": "d01f0689-8da3-473e-b68b-1e14d91a3559",
      "name": "Slack Message"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        336,
        304
      ],
      "id": "dfe38b77-962d-43f0-83bd-be18de90b258",
      "name": "Error Trigger"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "REDACTED_SLACK_WEBHOOK_URL",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=*Error ID:* {{ $json.execution.id }}\n*Error:* {{$json.execution.error.message }}\n*Workflow:* {{ $json.workflow.name }}\n*Last Node Executed* {{ $json.execution.lastNodeExecuted }}\n\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        624,
        288
      ],
      "id": "8446b3a3-28ad-4219-9358-aed21a8e51be",
      "name": "Slack Error Message"
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Ai model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ai model": {
      "main": [
        [
          {
            "node": "Ai response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ai response": {
      "main": [
        [
          {
            "node": "Slack Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Slack Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "07741820-a922-4460-9662-658a8f79626b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "REDACTED_INSTANCE_ID"
  },
  "id": "8O0mCj60fTA3L2pz",
  "tags": []
}